//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.6.6-rc001
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from D:\GIT\github\CLI\src\Gen\Grammar.g4 by ANTLR 4.6.6-rc001

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

namespace Tars.Net.CLI.Grammar {
using Antlr4.Runtime;
using Antlr4.Runtime.Atn;
using Antlr4.Runtime.Misc;
using DFA = Antlr4.Runtime.Dfa.DFA;

[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.6.6-rc001")]
[System.CLSCompliant(false)]
public partial class GrammarLexer : Lexer {
	public const int
		T__0=1, T__1=2, T__2=3, T__3=4, T__4=5, T__5=6, T__6=7, T__7=8, T__8=9, 
		T__9=10, T__10=11, T__11=12, T__12=13, T__13=14, T__14=15, T__15=16, T__16=17, 
		T__17=18, T__18=19, T__19=20, ID=21, Int=22, Float=23, String=24, LineComment=25, 
		BlockComment=26, WS=27;
	public static string[] modeNames = {
		"DEFAULT_MODE"
	};

	public static readonly string[] ruleNames = {
		"T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6", "T__7", "T__8", 
		"T__9", "T__10", "T__11", "T__12", "T__13", "T__14", "T__15", "T__16", 
		"T__17", "T__18", "T__19", "ID", "ID_Letter", "Digit", "Number", "Int", 
		"Float", "String", "ESC", "LineComment", "BlockComment", "WS"
	};


	public GrammarLexer(ICharStream input)
		: base(input)
	{
		_interp = new LexerATNSimulator(this,_ATN);
	}

	private static readonly string[] _LiteralNames = {
		null, "'#include'", "'module'", "'{'", "'}'", "';'", "'.'", "'interface'", 
		"'('", "')'", "','", "'out'", "'struct'", "'='", "'require'", "'optional'", 
		"'vector'", "'<'", "'>'", "'map'", "'enum'"
	};
	private static readonly string[] _SymbolicNames = {
		null, null, null, null, null, null, null, null, null, null, null, null, 
		null, null, null, null, null, null, null, null, null, "ID", "Int", "Float", 
		"String", "LineComment", "BlockComment", "WS"
	};
	public static readonly IVocabulary DefaultVocabulary = new Vocabulary(_LiteralNames, _SymbolicNames);

	[System.Obsolete("Use Vocabulary instead.")]
	public static readonly string[] tokenNames = GenerateTokenNames(DefaultVocabulary, _SymbolicNames.Length);

	private static string[] GenerateTokenNames(IVocabulary vocabulary, int length) {
		string[] tokenNames = new string[length];
		for (int i = 0; i < tokenNames.Length; i++) {
			tokenNames[i] = vocabulary.GetLiteralName(i);
			if (tokenNames[i] == null) {
				tokenNames[i] = vocabulary.GetSymbolicName(i);
			}

			if (tokenNames[i] == null) {
				tokenNames[i] = "<INVALID>";
			}
		}

		return tokenNames;
	}

	[System.Obsolete("Use IRecognizer.Vocabulary instead.")]
	public override string[] TokenNames
	{
		get
		{
			return tokenNames;
		}
	}

	[NotNull]
	public override IVocabulary Vocabulary
	{
		get
		{
			return DefaultVocabulary;
		}
	}

	public override string GrammarFileName { get { return "Grammar.g4"; } }

	public override string[] RuleNames { get { return ruleNames; } }

	public override string[] ModeNames { get { return modeNames; } }

	public override string SerializedAtn { get { return _serializedATN; } }

	public static readonly string _serializedATN =
		"\x3\xAF6F\x8320\x479D\xB75C\x4880\x1605\x191C\xAB37\x2\x1D\xEC\b\x1\x4"+
		"\x2\t\x2\x4\x3\t\x3\x4\x4\t\x4\x4\x5\t\x5\x4\x6\t\x6\x4\a\t\a\x4\b\t\b"+
		"\x4\t\t\t\x4\n\t\n\x4\v\t\v\x4\f\t\f\x4\r\t\r\x4\xE\t\xE\x4\xF\t\xF\x4"+
		"\x10\t\x10\x4\x11\t\x11\x4\x12\t\x12\x4\x13\t\x13\x4\x14\t\x14\x4\x15"+
		"\t\x15\x4\x16\t\x16\x4\x17\t\x17\x4\x18\t\x18\x4\x19\t\x19\x4\x1A\t\x1A"+
		"\x4\x1B\t\x1B\x4\x1C\t\x1C\x4\x1D\t\x1D\x4\x1E\t\x1E\x4\x1F\t\x1F\x4 "+
		"\t \x3\x2\x3\x2\x3\x2\x3\x2\x3\x2\x3\x2\x3\x2\x3\x2\x3\x2\x3\x3\x3\x3"+
		"\x3\x3\x3\x3\x3\x3\x3\x3\x3\x3\x3\x4\x3\x4\x3\x5\x3\x5\x3\x6\x3\x6\x3"+
		"\a\x3\a\x3\b\x3\b\x3\b\x3\b\x3\b\x3\b\x3\b\x3\b\x3\b\x3\b\x3\t\x3\t\x3"+
		"\n\x3\n\x3\v\x3\v\x3\f\x3\f\x3\f\x3\f\x3\r\x3\r\x3\r\x3\r\x3\r\x3\r\x3"+
		"\r\x3\xE\x3\xE\x3\xF\x3\xF\x3\xF\x3\xF\x3\xF\x3\xF\x3\xF\x3\xF\x3\x10"+
		"\x3\x10\x3\x10\x3\x10\x3\x10\x3\x10\x3\x10\x3\x10\x3\x10\x3\x11\x3\x11"+
		"\x3\x11\x3\x11\x3\x11\x3\x11\x3\x11\x3\x12\x3\x12\x3\x13\x3\x13\x3\x14"+
		"\x3\x14\x3\x14\x3\x14\x3\x15\x3\x15\x3\x15\x3\x15\x3\x15\x3\x16\x3\x16"+
		"\x3\x16\a\x16\x9F\n\x16\f\x16\xE\x16\xA2\v\x16\x3\x17\x3\x17\x3\x18\x3"+
		"\x18\x3\x19\x3\x19\x3\x19\x5\x19\xAB\n\x19\x3\x1A\x6\x1A\xAE\n\x1A\r\x1A"+
		"\xE\x1A\xAF\x3\x1B\x6\x1B\xB3\n\x1B\r\x1B\xE\x1B\xB4\x3\x1B\x3\x1B\a\x1B"+
		"\xB9\n\x1B\f\x1B\xE\x1B\xBC\v\x1B\x3\x1C\x3\x1C\x3\x1C\a\x1C\xC1\n\x1C"+
		"\f\x1C\xE\x1C\xC4\v\x1C\x3\x1C\x3\x1C\x3\x1D\x3\x1D\x3\x1D\x3\x1E\x3\x1E"+
		"\x3\x1E\x3\x1E\a\x1E\xCF\n\x1E\f\x1E\xE\x1E\xD2\v\x1E\x3\x1E\x3\x1E\x3"+
		"\x1E\x3\x1E\x3\x1F\x3\x1F\x3\x1F\x3\x1F\a\x1F\xDC\n\x1F\f\x1F\xE\x1F\xDF"+
		"\v\x1F\x3\x1F\x3\x1F\x3\x1F\x3\x1F\x3\x1F\x3 \x6 \xE7\n \r \xE \xE8\x3"+
		" \x3 \x5\xC2\xD0\xDD\x2\x2!\x3\x2\x3\x5\x2\x4\a\x2\x5\t\x2\x6\v\x2\a\r"+
		"\x2\b\xF\x2\t\x11\x2\n\x13\x2\v\x15\x2\f\x17\x2\r\x19\x2\xE\x1B\x2\xF"+
		"\x1D\x2\x10\x1F\x2\x11!\x2\x12#\x2\x13%\x2\x14\'\x2\x15)\x2\x16+\x2\x17"+
		"-\x2\x2/\x2\x2\x31\x2\x2\x33\x2\x18\x35\x2\x19\x37\x2\x1A\x39\x2\x2;\x2"+
		"\x1B=\x2\x1C?\x2\x1D\x3\x2\x5\x5\x2\x43\\\x61\x61\x63|\b\x2$$^^\x64\x64"+
		"ppttvv\x5\x2\v\f\xF\xF\"\"\xF2\x2\x3\x3\x2\x2\x2\x2\x5\x3\x2\x2\x2\x2"+
		"\a\x3\x2\x2\x2\x2\t\x3\x2\x2\x2\x2\v\x3\x2\x2\x2\x2\r\x3\x2\x2\x2\x2\xF"+
		"\x3\x2\x2\x2\x2\x11\x3\x2\x2\x2\x2\x13\x3\x2\x2\x2\x2\x15\x3\x2\x2\x2"+
		"\x2\x17\x3\x2\x2\x2\x2\x19\x3\x2\x2\x2\x2\x1B\x3\x2\x2\x2\x2\x1D\x3\x2"+
		"\x2\x2\x2\x1F\x3\x2\x2\x2\x2!\x3\x2\x2\x2\x2#\x3\x2\x2\x2\x2%\x3\x2\x2"+
		"\x2\x2\'\x3\x2\x2\x2\x2)\x3\x2\x2\x2\x2+\x3\x2\x2\x2\x2\x33\x3\x2\x2\x2"+
		"\x2\x35\x3\x2\x2\x2\x2\x37\x3\x2\x2\x2\x2;\x3\x2\x2\x2\x2=\x3\x2\x2\x2"+
		"\x2?\x3\x2\x2\x2\x3\x41\x3\x2\x2\x2\x5J\x3\x2\x2\x2\aQ\x3\x2\x2\x2\tS"+
		"\x3\x2\x2\x2\vU\x3\x2\x2\x2\rW\x3\x2\x2\x2\xFY\x3\x2\x2\x2\x11\x63\x3"+
		"\x2\x2\x2\x13\x65\x3\x2\x2\x2\x15g\x3\x2\x2\x2\x17i\x3\x2\x2\x2\x19m\x3"+
		"\x2\x2\x2\x1Bt\x3\x2\x2\x2\x1Dv\x3\x2\x2\x2\x1F~\x3\x2\x2\x2!\x87\x3\x2"+
		"\x2\x2#\x8E\x3\x2\x2\x2%\x90\x3\x2\x2\x2\'\x92\x3\x2\x2\x2)\x96\x3\x2"+
		"\x2\x2+\x9B\x3\x2\x2\x2-\xA3\x3\x2\x2\x2/\xA5\x3\x2\x2\x2\x31\xAA\x3\x2"+
		"\x2\x2\x33\xAD\x3\x2\x2\x2\x35\xB2\x3\x2\x2\x2\x37\xBD\x3\x2\x2\x2\x39"+
		"\xC7\x3\x2\x2\x2;\xCA\x3\x2\x2\x2=\xD7\x3\x2\x2\x2?\xE6\x3\x2\x2\x2\x41"+
		"\x42\a%\x2\x2\x42\x43\ak\x2\x2\x43\x44\ap\x2\x2\x44\x45\a\x65\x2\x2\x45"+
		"\x46\an\x2\x2\x46G\aw\x2\x2GH\a\x66\x2\x2HI\ag\x2\x2I\x4\x3\x2\x2\x2J"+
		"K\ao\x2\x2KL\aq\x2\x2LM\a\x66\x2\x2MN\aw\x2\x2NO\an\x2\x2OP\ag\x2\x2P"+
		"\x6\x3\x2\x2\x2QR\a}\x2\x2R\b\x3\x2\x2\x2ST\a\x7F\x2\x2T\n\x3\x2\x2\x2"+
		"UV\a=\x2\x2V\f\x3\x2\x2\x2WX\a\x30\x2\x2X\xE\x3\x2\x2\x2YZ\ak\x2\x2Z["+
		"\ap\x2\x2[\\\av\x2\x2\\]\ag\x2\x2]^\at\x2\x2^_\ah\x2\x2_`\a\x63\x2\x2"+
		"`\x61\a\x65\x2\x2\x61\x62\ag\x2\x2\x62\x10\x3\x2\x2\x2\x63\x64\a*\x2\x2"+
		"\x64\x12\x3\x2\x2\x2\x65\x66\a+\x2\x2\x66\x14\x3\x2\x2\x2gh\a.\x2\x2h"+
		"\x16\x3\x2\x2\x2ij\aq\x2\x2jk\aw\x2\x2kl\av\x2\x2l\x18\x3\x2\x2\x2mn\a"+
		"u\x2\x2no\av\x2\x2op\at\x2\x2pq\aw\x2\x2qr\a\x65\x2\x2rs\av\x2\x2s\x1A"+
		"\x3\x2\x2\x2tu\a?\x2\x2u\x1C\x3\x2\x2\x2vw\at\x2\x2wx\ag\x2\x2xy\as\x2"+
		"\x2yz\aw\x2\x2z{\ak\x2\x2{|\at\x2\x2|}\ag\x2\x2}\x1E\x3\x2\x2\x2~\x7F"+
		"\aq\x2\x2\x7F\x80\ar\x2\x2\x80\x81\av\x2\x2\x81\x82\ak\x2\x2\x82\x83\a"+
		"q\x2\x2\x83\x84\ap\x2\x2\x84\x85\a\x63\x2\x2\x85\x86\an\x2\x2\x86 \x3"+
		"\x2\x2\x2\x87\x88\ax\x2\x2\x88\x89\ag\x2\x2\x89\x8A\a\x65\x2\x2\x8A\x8B"+
		"\av\x2\x2\x8B\x8C\aq\x2\x2\x8C\x8D\at\x2\x2\x8D\"\x3\x2\x2\x2\x8E\x8F"+
		"\a>\x2\x2\x8F$\x3\x2\x2\x2\x90\x91\a@\x2\x2\x91&\x3\x2\x2\x2\x92\x93\a"+
		"o\x2\x2\x93\x94\a\x63\x2\x2\x94\x95\ar\x2\x2\x95(\x3\x2\x2\x2\x96\x97"+
		"\ag\x2\x2\x97\x98\ap\x2\x2\x98\x99\aw\x2\x2\x99\x9A\ao\x2\x2\x9A*\x3\x2"+
		"\x2\x2\x9B\xA0\x5-\x17\x2\x9C\x9F\x5-\x17\x2\x9D\x9F\x5/\x18\x2\x9E\x9C"+
		"\x3\x2\x2\x2\x9E\x9D\x3\x2\x2\x2\x9F\xA2\x3\x2\x2\x2\xA0\x9E\x3\x2\x2"+
		"\x2\xA0\xA1\x3\x2\x2\x2\xA1,\x3\x2\x2\x2\xA2\xA0\x3\x2\x2\x2\xA3\xA4\t"+
		"\x2\x2\x2\xA4.\x3\x2\x2\x2\xA5\xA6\x4\x32;\x2\xA6\x30\x3\x2\x2\x2\xA7"+
		"\xAB\x5/\x18\x2\xA8\xA9\a/\x2\x2\xA9\xAB\x5/\x18\x2\xAA\xA7\x3\x2\x2\x2"+
		"\xAA\xA8\x3\x2\x2\x2\xAB\x32\x3\x2\x2\x2\xAC\xAE\x5\x31\x19\x2\xAD\xAC"+
		"\x3\x2\x2\x2\xAE\xAF\x3\x2\x2\x2\xAF\xAD\x3\x2\x2\x2\xAF\xB0\x3\x2\x2"+
		"\x2\xB0\x34\x3\x2\x2\x2\xB1\xB3\x5\x31\x19\x2\xB2\xB1\x3\x2\x2\x2\xB3"+
		"\xB4\x3\x2\x2\x2\xB4\xB2\x3\x2\x2\x2\xB4\xB5\x3\x2\x2\x2\xB5\xB6\x3\x2"+
		"\x2\x2\xB6\xBA\a\x30\x2\x2\xB7\xB9\x5/\x18\x2\xB8\xB7\x3\x2\x2\x2\xB9"+
		"\xBC\x3\x2\x2\x2\xBA\xB8\x3\x2\x2\x2\xBA\xBB\x3\x2\x2\x2\xBB\x36\x3\x2"+
		"\x2\x2\xBC\xBA\x3\x2\x2\x2\xBD\xC2\a$\x2\x2\xBE\xC1\x5\x39\x1D\x2\xBF"+
		"\xC1\v\x2\x2\x2\xC0\xBE\x3\x2\x2\x2\xC0\xBF\x3\x2\x2\x2\xC1\xC4\x3\x2"+
		"\x2\x2\xC2\xC3\x3\x2\x2\x2\xC2\xC0\x3\x2\x2\x2\xC3\xC5\x3\x2\x2\x2\xC4"+
		"\xC2\x3\x2\x2\x2\xC5\xC6\a$\x2\x2\xC6\x38\x3\x2\x2\x2\xC7\xC8\a^\x2\x2"+
		"\xC8\xC9\t\x3\x2\x2\xC9:\x3\x2\x2\x2\xCA\xCB\a\x31\x2\x2\xCB\xCC\a\x31"+
		"\x2\x2\xCC\xD0\x3\x2\x2\x2\xCD\xCF\v\x2\x2\x2\xCE\xCD\x3\x2\x2\x2\xCF"+
		"\xD2\x3\x2\x2\x2\xD0\xD1\x3\x2\x2\x2\xD0\xCE\x3\x2\x2\x2\xD1\xD3\x3\x2"+
		"\x2\x2\xD2\xD0\x3\x2\x2\x2\xD3\xD4\a\f\x2\x2\xD4\xD5\x3\x2\x2\x2\xD5\xD6"+
		"\b\x1E\x2\x2\xD6<\x3\x2\x2\x2\xD7\xD8\a\x31\x2\x2\xD8\xD9\a,\x2\x2\xD9"+
		"\xDD\x3\x2\x2\x2\xDA\xDC\v\x2\x2\x2\xDB\xDA\x3\x2\x2\x2\xDC\xDF\x3\x2"+
		"\x2\x2\xDD\xDE\x3\x2\x2\x2\xDD\xDB\x3\x2\x2\x2\xDE\xE0\x3\x2\x2\x2\xDF"+
		"\xDD\x3\x2\x2\x2\xE0\xE1\a,\x2\x2\xE1\xE2\a\x31\x2\x2\xE2\xE3\x3\x2\x2"+
		"\x2\xE3\xE4\b\x1F\x2\x2\xE4>\x3\x2\x2\x2\xE5\xE7\t\x4\x2\x2\xE6\xE5\x3"+
		"\x2\x2\x2\xE7\xE8\x3\x2\x2\x2\xE8\xE6\x3\x2\x2\x2\xE8\xE9\x3\x2\x2\x2"+
		"\xE9\xEA\x3\x2\x2\x2\xEA\xEB\b \x2\x2\xEB@\x3\x2\x2\x2\xE\x2\x9E\xA0\xAA"+
		"\xAF\xB4\xBA\xC0\xC2\xD0\xDD\xE8\x3\b\x2\x2";
	public static readonly ATN _ATN =
		new ATNDeserializer().Deserialize(_serializedATN.ToCharArray());
}
} // namespace Tars.Net.CLI.Grammar
