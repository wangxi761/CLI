//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.6.6-rc001
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from D:\code\Tars\CLI\src\Gen\Grammar.g4 by ANTLR 4.6.6-rc001

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

namespace Tars.Net.CLI {

using Antlr4.Runtime.Misc;
using IErrorNode = Antlr4.Runtime.Tree.IErrorNode;
using ITerminalNode = Antlr4.Runtime.Tree.ITerminalNode;
using IToken = Antlr4.Runtime.IToken;
using ParserRuleContext = Antlr4.Runtime.ParserRuleContext;

/// <summary>
/// This class provides an empty implementation of <see cref="IGrammarListener"/>,
/// which can be extended to create a listener which only needs to handle a subset
/// of the available methods.
/// </summary>
[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.6.6-rc001")]
[System.CLSCompliant(false)]
public partial class GrammarBaseListener : IGrammarListener {
	/// <summary>
	/// Enter a parse tree produced by <see cref="GrammarParser.tarsDefinitions"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterTarsDefinitions([NotNull] GrammarParser.TarsDefinitionsContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="GrammarParser.tarsDefinitions"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitTarsDefinitions([NotNull] GrammarParser.TarsDefinitionsContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="GrammarParser.tarsDefinition"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterTarsDefinition([NotNull] GrammarParser.TarsDefinitionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="GrammarParser.tarsDefinition"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitTarsDefinition([NotNull] GrammarParser.TarsDefinitionContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="GrammarParser.includeDefinition"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterIncludeDefinition([NotNull] GrammarParser.IncludeDefinitionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="GrammarParser.includeDefinition"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitIncludeDefinition([NotNull] GrammarParser.IncludeDefinitionContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="GrammarParser.moduleDefinition"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterModuleDefinition([NotNull] GrammarParser.ModuleDefinitionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="GrammarParser.moduleDefinition"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitModuleDefinition([NotNull] GrammarParser.ModuleDefinitionContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="GrammarParser.memberDefinition"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterMemberDefinition([NotNull] GrammarParser.MemberDefinitionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="GrammarParser.memberDefinition"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitMemberDefinition([NotNull] GrammarParser.MemberDefinitionContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="GrammarParser.moduleName"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterModuleName([NotNull] GrammarParser.ModuleNameContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="GrammarParser.moduleName"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitModuleName([NotNull] GrammarParser.ModuleNameContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="GrammarParser.interfaceDefinition"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterInterfaceDefinition([NotNull] GrammarParser.InterfaceDefinitionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="GrammarParser.interfaceDefinition"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitInterfaceDefinition([NotNull] GrammarParser.InterfaceDefinitionContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="GrammarParser.methodDefinition"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterMethodDefinition([NotNull] GrammarParser.MethodDefinitionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="GrammarParser.methodDefinition"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitMethodDefinition([NotNull] GrammarParser.MethodDefinitionContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="GrammarParser.methodParameterDefinition"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterMethodParameterDefinition([NotNull] GrammarParser.MethodParameterDefinitionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="GrammarParser.methodParameterDefinition"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitMethodParameterDefinition([NotNull] GrammarParser.MethodParameterDefinitionContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="GrammarParser.structDefinition"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterStructDefinition([NotNull] GrammarParser.StructDefinitionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="GrammarParser.structDefinition"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitStructDefinition([NotNull] GrammarParser.StructDefinitionContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="GrammarParser.fieldDefinition"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterFieldDefinition([NotNull] GrammarParser.FieldDefinitionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="GrammarParser.fieldDefinition"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitFieldDefinition([NotNull] GrammarParser.FieldDefinitionContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="GrammarParser.fieldOption"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterFieldOption([NotNull] GrammarParser.FieldOptionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="GrammarParser.fieldOption"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitFieldOption([NotNull] GrammarParser.FieldOptionContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="GrammarParser.fieldValue"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterFieldValue([NotNull] GrammarParser.FieldValueContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="GrammarParser.fieldValue"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitFieldValue([NotNull] GrammarParser.FieldValueContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="GrammarParser.typeDeclaration"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterTypeDeclaration([NotNull] GrammarParser.TypeDeclarationContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="GrammarParser.typeDeclaration"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitTypeDeclaration([NotNull] GrammarParser.TypeDeclarationContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="GrammarParser.enumDefinition"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterEnumDefinition([NotNull] GrammarParser.EnumDefinitionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="GrammarParser.enumDefinition"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitEnumDefinition([NotNull] GrammarParser.EnumDefinitionContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="GrammarParser.enumDeclaration"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterEnumDeclaration([NotNull] GrammarParser.EnumDeclarationContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="GrammarParser.enumDeclaration"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitEnumDeclaration([NotNull] GrammarParser.EnumDeclarationContext context) { }

	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void EnterEveryRule([NotNull] ParserRuleContext context) { }
	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void ExitEveryRule([NotNull] ParserRuleContext context) { }
	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void VisitTerminal([NotNull] ITerminalNode node) { }
	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void VisitErrorNode([NotNull] IErrorNode node) { }
}
} // namespace Tars.Net.CLI
